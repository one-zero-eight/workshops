"""refactor

Revision ID: 045ff0ee663b
Revises:
Create Date: 2025-08-06 16:25:07.099781

"""

from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel
import sqlmodel.sql.sqltypes

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "045ff0ee663b"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("innohassle_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("telegram_username", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("role", sa.Enum("admin", "user", name="userrole"), nullable=False),
        sa.PrimaryKeyConstraint("innohassle_id"),
    )
    op.create_table(
        "workshops",
        sa.Column("id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("dtstart", sa.DateTime(timezone=True), nullable=True),
        sa.Column("dtend", sa.DateTime(timezone=True), nullable=True),
        sa.Column("place", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("capacity", sa.Integer(), nullable=False),
        sa.Column("remain_places", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_registrable", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_workshops_id"), "workshops", ["id"], unique=False)
    op.create_index(op.f("ix_workshops_name"), "workshops", ["name"], unique=False)
    op.create_table(
        "workshopcheckin",
        sa.Column("user_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("workshop_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.innohassle_id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["workshop_id"], ["workshops.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("user_id", "workshop_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("workshopcheckin")
    op.drop_index(op.f("ix_workshops_name"), table_name="workshops")
    op.drop_index(op.f("ix_workshops_id"), table_name="workshops")
    op.drop_table("workshops")
    op.drop_table("users")
    # ### end Alembic commands ###
